@page "/profile"
@inject NavigationManager NavManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<head>
</head>
<body>

    <div id="profile-background">
            <div id="profile-bar" class="m-x-5 w-75 bg-white rounded-3 m-5 d-lg-flex flex-row justify-content-between p-1 flex-nowrap">
                <div class="w-25 p-1 d-flex align-items-center justify-content-center flex-nowrap">
                    <img id="profile-img" src="@GetProfilePhoto()" />
                </div>
                <div class="p-1 d-flex flex-column align-items-center justify-content-center text-end flex-nowrap">
                    <p class="m-0">@GetUserName()</p>
                    <h2 class="m-0">@GetName()</h2>

                    <p class="m-0">@GetAccountType() Account</p>
                </div>
            </div>
        <div id="profile-body-container" class="m-0 m-x-5 w-100 bg-white rounded-profile p-3">



            <div id="profile-description-container">
                <EditForm Model="profileBioForm" id="profile-description-contents" OnValidSubmit="ChangeBio">
                    <h2 class="text-center fw-bold">About:</h2>
                    <InputTextArea id="profile-bio" placeholder="@GetProfileDescription()" @bind-Value="profileBioForm.profileBio"></InputTextArea>
                    <div id="profile-description-submit">
                        <MudButton ButtonType="ButtonType.Submit">Submit</MudButton>
                    </div>
                </EditForm>
            </div>


            <div id="profile-edit-container">
                <MudButton class="d-flex rounded-3 m-1" @onclick="ChangeUserName">Change Username</MudButton>
                <MudButton class="d-flex rounded-3 m-1" @onclick="ChangePassowrd">Change Password</MudButton>
                <MudButton class="d-flex rounded-3 m-1" @onclick="ChangePhoto">Change Photo</MudButton>
            </div>


        </div>
    </div>

</body>




@code {

    private string GetAccountType()
    {
        Data.MySQLDB db = new Data.MySQLDB();
        return db.GetAccountType(Convert.ToInt32(userId));
    }

    private string GetName()
    {
        Data.MySQLDB db = new Data.MySQLDB();

        return db.GetName(Convert.ToInt32(userId));
    }

    private string GetUserName()
    {
        Data.MySQLDB db = new Data.MySQLDB();

        return "@" + db.GetUserName(Convert.ToInt32(userId));
    }

    private string GetProfileDescription()
    {
        Data.MySQLDB db = new Data.MySQLDB();
        Data.ProfileBioForm bioForm = db.GetProfileBio(Convert.ToInt32(userId));

        return bioForm.profileBio;
    }

    Data.ProfileBioForm profileBioForm = new Data.ProfileBioForm();
    private void ChangeBio()
    {
        Data.MySQLDB db = new Data.MySQLDB();
        db.UpdateUserBio(profileBioForm.profileBio, Convert.ToInt32(userId));
    }

    private void ChangeUserName()
    {
        NavManager.NavigateTo("/profile/changeusername");
    }

    private void ChangePassowrd()
    {
        NavManager.NavigateTo("/profile/changepassword");
    }

    private void ChangePhoto()
    {
        NavManager.NavigateTo("/profile/changephoto");
    }


    string userId;

    private string GetProfilePhoto()
    {

        Data.MySQLDB db = new Data.MySQLDB();
        string photoName = db.GetProfilePhoto(Convert.ToInt32(userId));
        Console.WriteLine(photoName);
        string src = $"userphotos\\{photoName}";
        return src;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await GetSessionUser();
        StateHasChanged();
    }

    private async Task GetSessionUser()
    {
        userId = await sessionStorage.GetItemAsync<String>("userId");
    }

}
